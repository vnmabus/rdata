@misc{diaz-vico+ramos-carreno_2023_scikitdatasets,
  title = {{{scikit-datasets}}: {{Scikit-learn-compatible}} Datasets},
  author = {{D{\'i}az-Vico}, David and {Ramos-Carre{\~n}o}, Carlos},
  year = {2023},
  month = aug,
  doi = {10.5281/zenodo.6383047},
  url = {https://github.com/daviddiazvico/scikit-datasets},
  copyright = {MIT}
}

@misc{fajardo_2024_pyreadr,
  title = {Pyreadr},
  author = {Fajardo, Otto},
  year = {2024},
  month = jul,
  publisher = {Zenodo},
  doi = {10.5281/zenodo.7110169},
  url = {https://github.com/ofajardo/pyreadr}
}

@misc{gautier_2024_rpy2,
  title = {Rpy2: {{R}} in {{Python}}},
  author = {Gautier, Laurent},
  year = {2024},
  publisher = {GitHub},
  url = {https://github.com/rpy2/rpy2}
}

@article{harris+_2020_numpy,
  title = {Array programming with {NumPy}},
  author = {Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
            van der Walt and Ralf Gommers and Pauli Virtanen and David
            Cournapeau and Eric Wieser and Julian Taylor and Sebastian
            Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
            and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
            Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
            R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
            G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
            Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
            Travis E. Oliphant},
  year = {2020},
  month = sep,
  journal = {Nature},
  volume = {585},
  number = {7825},
  pages = {357--362},
  doi = {10.1038/s41586-020-2649-2},
}

@inproceedings{mckinney_2010_pandas,
  author = {{W}es {M}c{K}inney},
  title = {{D}ata {S}tructures for {S}tatistical {C}omputing in {P}ython},
  booktitle = {{P}roceedings of the 9th {P}ython in {S}cience {C}onference},
  pages = {56 - 61},
  year = {2010},
  editor = {{S}t\'efan van der {W}alt and {J}arrod {M}illman},
  doi = {10.25080/Majora-92bf1922-00a},
}

@software{pandasdevelopmentteam_2024_pandasdev,
  title = {{{pandas-dev/pandas}}: {{pandas}}},
  author = {{The Pandas Development Team}},
  year = {2024},
  month = apr,
  publisher = {Zenodo},
  doi = {10.5281/zenodo.3509134},
  url = {https://doi.org/10.5281/zenodo.3509134},
  version = {latest}
}

@article{ramos-carreno+_2024_scikitfda,
  title = {Scikit-Fda: {{A Python Package}} for {{Functional Data Analysis}}},
  shorttitle = {Scikit-Fda},
  author = {{Ramos-Carre{\~n}o}, Carlos and Torrecilla, Jos{\'e} Luis and {Carbajo-Berrocal}, Miguel and Marcos, Pablo and Su{\'a}rez, Alberto},
  year = {2024},
  month = may,
  journal = {Journal of Statistical Software},
  volume = {109},
  pages = {1--37},
  issn = {1548-7660},
  doi = {10.18637/jss.v109.i02},
  abstract = {The library scikit-fda is a Python package for functional data analysis (FDA). It provides a comprehensive set of tools for representation, preprocessing, and exploratory analysis of functional data. The library is built upon and integrated in Python's scientific ecosystem. In particular, it conforms to the scikit-learn application programming interface so as to take advantage of the functionality for machine learning provided by this package: Pipelines, model selection, and hyperparameter tuning, among others. The scikit-fda package has been released as free and open-source software under a 3-clause BSD license and is open to contributions from the FDA community. The library's extensive documentation includes step-by-step tutorials and detailed examples of use.},
  copyright = {Copyright (c) 2024 Carlos Ramos-Carre{\~n}o, Jos{\'e} Luis Torrecilla, Miguel Carbajo-Berrocal, Pablo Marcos, Alberto Su{\'a}rez},
  langid = {english}
}

@article{rahman+_2024_hmschpc,
  title = {Accelerating joint species distribution modelling with {Hmsc-HPC} by {GPU} porting},
  author = {Rahman, Anis Ur and Tikhonov, Gleb and Oksanen, Jari and Rossi, Tuomas and Ovaskainen, Otso},
  year = {2024},
  month = sep,
  journal = {PLOS Computational Biology},
  volume = {20},
  number = {9},
  pages = {e1011914},
  doi = {10.1371/journal.pcbi.1011914},
  abstract = {Joint species distribution modelling (JSDM) is a widely used statistical method that analyzes combined patterns of all species in a community, linking empirical data to ecological theory and enhancing community-wide prediction tasks. However, fitting JSDMs to large datasets is often computationally demanding and time-consuming. Recent studies have introduced new statistical and machine learning techniques to provide more scalable fitting algorithms, but extending these to complex JSDM structures that account for spatial dependencies or multi-level sampling designs remains challenging. In this study, we aim to enhance JSDM scalability by leveraging high-performance computing (HPC) resources for an existing fitting method. Our work focuses on the Hmsc R-package, a widely used JSDM framework that supports the integration of various dataset types into a single comprehensive model. We developed a GPU-compatible implementation of its model-fitting algorithm using Python and the TensorFlow library. Despite these changes, our enhanced framework retains the original user interface of the Hmsc R-package. We evaluated the performance of the proposed implementation across various model configurations and dataset sizes. Our results show a significant increase in model fitting speed for most models compared to the baseline Hmsc R-package. For the largest datasets, we achieved speed-ups of over 1000 times, demonstrating the substantial potential of GPU porting for previously CPU-bound JSDM software. This advancement opens promising opportunities for better utilizing the rapidly accumulating new biodiversity data resources for inference and prediction.},
}